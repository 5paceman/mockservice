{
  "author": {
    "name": "liandong liu"
  },
  "contacts": [
    "liu@liandong.org"
  ],
  "name": "beef",
  "description": "beef - brwoser end equals framework",
  "version": "0.0.5",
  "repository": {
    "type": "git",
    "url": "git://github.com/linkwisdom/beef.git"
  },
  "main": "./src/require.js",
  "keywords": [
    "requirejs",
    "require",
    "AMD",
    "beef"
  ],
  "bin": {
    "beef": "./bin/beef"
  },
  "dependencies": {},
  "engines": {
    "node": "*"
  },
  "scripts": {
    "test": "node test/test.js"
  },
  "readme": "beef -- 牛排\n-----------------\n\n> 解决前后端模块化共用；面向前端AMDJS模块，支持前端模块在服务端使用；提供模块插件机制；支持自定义路由\n\n> beef means that modules from backend to frontend stay works\n\n## Features\n * 支持标准模块加载器, requirejs, esl, seajs\n * 支持常用插件形式, text, json, less, css\n * 支持自定义扩展插件 require.plugin\n * 支持自定义路由配置\n\n```js\n\n  global.require = require('beef');\n  \n  // 自定义路由\n  require.config({\n      baseUrl: './source',\n      packages: {\n          'admin': '../admin'\n      }\n  });\n  \n  // 自定义扩展插件\n  require.plugin.ext = function (filename) {\n      return require(filename);\n  };\n\n```\n\n \n## 使用方法\n\n使用npm安装beef\n\n> npm install beef\n\n\n```js\n\n// 如果不仅仅当前模块使用，建议暴露为全局对象\nglobal.require = require('beef');\n\n// 同步require 方式\nvar mod = require('./mod');\n\n// 异步调用方式\nrequire(['./amd'], function(amd) {\n    console.log(amd);\n});\n\n// 利用插件读取\nvar text = require('text!./text.txt');\n\nconsole.log(text);\n\n```\n\n## 模块写法\n\n- 采用AMDJS写法\n> 需要用define-function定义模块\n\n```js\ndefine(function(require, exports, module) {\n    return \"mod\";\n});\n```\n- 采用node_modules写法\n\n```js\nmodule.exports = {\n  name: 'node-module'\n};\n```\n\n\n\n\n  ![fresh beef](http://image4.buy.ccb.com/images/59288134/1373701097874_3.jpg)\n",
  "readmeFilename": "README.md",
  "bugs": {
    "url": "https://github.com/linkwisdom/beef/issues"
  },
  "_id": "beef@0.0.5",
  "_from": "beef@>=0.0.4"
}
